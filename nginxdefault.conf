events {
    worker_connections 1024;
}

http {
	server {
		listen 80;

		server_name localhost;

		location / {
		  add_header X-Content-Type-Options nosniff;
		  add_header X-Frame-Options "SAMEORIGIN";
		  add_header X-XSS-Protection "1; mode=block";

			proxy_pass http://frontend:8080/;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		location /api/ {
			proxy_pass http://backend:3000/api/;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;

			# CORS
			if ($http_origin ~* ^(https?://(?:localhost|213\.171\.31\.227)(?::\d+)$)) {
				add_header 'Access-Contol-Allow-Origin' "$http_origin" always;
			}
			add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;
			add_header 'Vary' 'Origin' always;

			if ($request_method = OPTIONS) {
				add_header 'Access-Control-Max-Age' 1728000;
				add_header 'Content-Type' 'text/plain charset=UTF-8';
				add_header 'Content-Length' 0;
				return 204;
			}

			# Ограничение частоты запросов
			limit_req zone=api burst=5 nodelay;

		}
	}

# Ограничение запросов к API
limit_req_zone $binary_remote_addr zone=api:10m rate=50r/m;
}